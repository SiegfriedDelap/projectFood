{"version":3,"sources":["webpack://projectfood/./js/modules/calc.js","webpack://projectfood/./js/modules/cards.js","webpack://projectfood/./js/modules/forms.js","webpack://projectfood/./js/modules/modal.js","webpack://projectfood/./js/modules/slider.js","webpack://projectfood/./js/modules/tabs.js","webpack://projectfood/./js/modules/timer.js","webpack://projectfood/webpack/bootstrap","webpack://projectfood/./js/script.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;AACb,SAAS;;;AAGT;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;;AAGA;;AAEA,sB;;;;;;;;;;AC7HA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,iCAAiC;AACjC,gCAAgC;AAChC;;AAEA;AACA,sDAAsD;AACtD;;AAEA,kBAAkB;;AAElB;;AAEA;;AAEA;;AAEA;AACA;AACA,oDAAoD;AACpD,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,SAAS,OAAO,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAsB,iCAAiC,MAAM;AAC7D;AACA,QAAQ;AACR,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA,aAAa;AACb,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA,0BAA0B,iCAAiC;AAC3D;AACA;;AAEA;AACA,8BAA8B,IAAI,OAAO,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA,YAAY;;AAEZ;AACA;;AAEA,uB;;;;;;;;;;AClHA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,SAAS;AACT;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;;AAGA;;AAEA,uB;;;;;;;;;;AClGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD,oCAAoC;AACpC;;AAEA;;AAEA;;AAEA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA,uB;;;;;;;;;;ACtEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;AAIA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;;AAGA;;AAEA;AACA;;;AAGA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;;;AAGhE;AACA;;;AAGA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC,cAAc;AACjD,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,WAAW;AAChD,QAAQ;AACR;AACA;;AAEA;;;AAGA;AACA;AACA,QAAQ,EAAE;AACV;AACA;;;AAGA;AACA;AACA,QAAQ;;;AAGR;;AAEA,wB;;;;;;;;;;AC9OA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;;AAE3C,uCAAuC;AACvC,kDAAkD;;AAElD,SAAS;;AAET;;AAEA,4DAA4D;;AAE5D,SAAS;AACT;;AAEA,oCAAoC;AACpC,kDAAkD;AAClD;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;;AAEA,aAAa;AACb;;AAEA,KAAK;AACL;;AAEA,sB;;;;;;;;;;ACrDA;;AAEA;;AAEA;;AAEA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2BAA2B;AAC3B;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA,uB;;;;;;UCvEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,EAAE,8CAAiB;AAC5C,kBAAkB,mBAAO,EAAE,8CAAiB;AAC5C,iBAAiB,mBAAO,EAAE,4CAAgB;AAC1C,kBAAkB,mBAAO,EAAE,8CAAiB;AAC5C,mBAAmB,mBAAO,EAAE,gDAAkB;AAC9C,kBAAkB,mBAAO,EAAE,8CAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC","file":"bundle.js","sourcesContent":["function calc() {\r\n\r\n    //Calculator \r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    //задаем значения в локал сторедж\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    //устанавливаем класс активности на данные из локал сторедж\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '****';\r\n            return;\r\n        }\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInfo(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                console.log(ratio, sex);\r\n\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    getStaticInfo('#gender div', 'calculating__choose-item_active');\r\n    getStaticInfo('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInfo(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            //проверка на вводимость данных и работа с пользователем\r\n            //если он ввел не число границы красные инпутов будут\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px  solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n\r\n    }\r\n\r\n    getDynamicInfo('#height');\r\n    getDynamicInfo('#weight');\r\n    getDynamicInfo('#age');\r\n\r\n\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n\r\n    class MenuCard {\r\n\r\n        constructor(src, alt, title, descr, price, parentSelector /* куда будем помещать*/ , ...classes /*rest оператор если нужно еще добавить классов в будущем */ ) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector); //помещаем сюда родителя куда будем пихать карточку\r\n            this.dollarRate = 28; //курс доллара\r\n            this.convertToUAN(); //Динамическая конвертация валюты\r\n        }\r\n\r\n        convertToUAN() {\r\n            this.price = this.price * this.dollarRate; //метод конвертации валюты\r\n        }\r\n\r\n        render() { //рендер страницы\r\n\r\n            // 1.Создать элемент\r\n\r\n            // 3.Дополнить данными, используя интерполяцию и класс\r\n\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0 /*не один класс не был передан*/ ) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element); /*Добавляем класс по умолчанию*/\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            //4.Обработать переменную рест с классами по правилам массива, значение классов добавить к выводимому элементу\r\n            //5. Добавить класс .menu__item в дефолтное значение через иф в рендере\r\n            element.innerHTML = ` \r\n               \r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                `;\r\n\r\n            // 2.Поместить верстку на страницу\r\n\r\n            this.parent.append(element);\r\n\r\n        }\r\n    }\r\n\r\n    //добытие данных с бд\r\n\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    };\r\n\r\n    //генерация карт с шаблонизацией\r\n\r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    // data.forEach(({img, altimg, title, descr, price}) => { //деструктуризация объекта по его  частям\r\n    //     new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    // });\r\n    //     });\r\n\r\n    axios.get('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price\r\n            }) => { //деструктуризация объекта по его  частям\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n    //Генерация без шаблонизации карт товаров с базы данных\r\n\r\n    // getResource('http://localhost:3000/menu')\r\n    // .then(data =>createCard(data));\r\n\r\n    // function createCard(data){\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         const element = document.createElement('div');\r\n    //         element.classList.add('menu__item');\r\n\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n    //         document.querySelector('.menu .container').append(element);\r\n    //     });\r\n\r\n    // }\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n\r\n    //Отправка данных на вебсервер\r\n\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    //Ошибки сообщения, нужно поместить на страницу\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        succes: 'Спасибо! Mы скоро с вами свяжемся!',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    }); //на каждые данные отправляем \r\n\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n        return await res.json();\r\n    };\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            let statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n              display: block;\r\n              margin: 0 auto;\r\n              `;\r\n\r\n\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const formData = new FormData(form);\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.succes);\r\n                    statusMessage.remove();\r\n                }).catch(() => {\r\n                    showThanksModal(message.failure);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n        });\r\n    }\r\n\r\n    //Показывание окна благорадрности на месте модалки\r\n\r\n    function showThanksModal(message) {\r\n\r\n        //cкрыть блок\r\n\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        openModal();\r\n\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n          <div class =\"modal__content\">\r\n              <div class=\"modal__close\" data-close>x</div>\r\n              <div class=\"modal__title\">${message}</div>\r\n          </div>\r\n          `;\r\n\r\n        //цепляем созданую модалку\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        //убираем созданую модалку через 4 секунды\r\n\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n\r\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n        modal = document.querySelector('.modal');\r\n\r\n    //открытие модального окна\r\n\r\n    function openModal() {\r\n        modal.classList.add('show');\r\n        modal.classList.remove('hide');\r\n        document.body.style.overflow = 'hidden'; //прокрутка не работает\r\n        clearInterval(modalTimerId); //если пользователь сам открыл модалку, то мы больше его не задрачиваем\r\n    }\r\n\r\n    modalTrigger.forEach(btn => {\r\n\r\n        btn.addEventListener('click', openModal);\r\n\r\n    });\r\n\r\n    function closeModal() {\r\n\r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show');\r\n        //modal.classList.toggle('show');\r\n        document.body.style.overflow = '';\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //клик вне области модального окна закрывает его\r\n    modal.addEventListener('click', (e) => {\r\n\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n\r\n            closeModal();\r\n\r\n        }\r\n\r\n\r\n    });\r\n\r\n    //Esc закрывает модальное окно\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    //открытие модального онка через Ное время\r\n\r\n    const modalTimerId = setTimeout(openModal, 5000000);\r\n\r\n    //долистали до конца вызвали модалку\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n\r\n    //Slider\r\n\r\n    // 1.получить все элементы с какими работаем\r\n    // 2.получить индекс для работы\r\n    // 3.функция показа слайдов - принимает индекс и показывает, условие конца\r\n    // 4.навесить обработчики событий\r\n\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1;\r\n    //нужен для контроля отступа\r\n    let offset = 0;\r\n\r\n\r\n    //обрабатываем отображение слайдов\r\n\r\n\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n\r\n\r\n    // запихиваем все слайды в одно окно\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    //Все слайды в одну линию\r\n    slidesField.style.display = 'flex';\r\n    //плавный переход\r\n    slidesField.style.transition = '0.5s all';\r\n    //Ограничиваем показ жлементов внутри врапера\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    //устанавливаем одинаковую ширину слайдам\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    //задаем релятивную позицию слайдера\r\n    slider.style.position = 'relative';\r\n\r\n\r\n    //создаем список навигации по карусели\r\n    const indicators = document.createElement('ol'),\r\n        //динамический актив    \r\n        dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n\r\n    slider.append(indicators);\r\n\r\n    //создаем точки на слайдах, атрибутом даем назначение слайдам\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        //класс активности на первый слайд\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    //Активная точка\r\n\r\n    function dotActive() {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n\r\n\r\n    //номер текущего слайда \r\n\r\n    function currentSlide() {\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        //вычисляем последний слайд по формуле\r\n        if (offset == (deletePX(width) * (slides.length - 1))) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deletePX(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        currentSlide();\r\n        dotActive();\r\n\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deletePX(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deletePX(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n\r\n        //Точки на слайдерах горят в соответствии со слайдами\r\n\r\n        currentSlide();\r\n        dotActive();\r\n\r\n\r\n    });\r\n\r\n    //обработчик кликов по точкам\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deletePX(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\r\n            currentSlide();\r\n            dotActive();\r\n\r\n\r\n        });\r\n    });\r\n\r\n    function deletePX(str) {\r\n        return +str.replace(/px/g, '');\r\n    }\r\n    //простая версия без активности и карусели\r\n\r\n    // showSlides(slideIndex);\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // }else{\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     //если н больше количества слайдов, ушли в правую границу, то идем в начало\r\n    //     if (n> slides.length){\r\n    //         slideIndex = 1;\r\n    //     }\r\n    //     //если н меньше чем еденица, то идем просто в конец слайдов\r\n    //     if (n<1){\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     //скрываем все слайды\r\n    //     slides.forEach(item => item.style.display = 'none');\r\n\r\n    //     //показываем текущий слайд начиная с 0 элемента массива данных со слайдами\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n\r\n    // if (slides.length < 10) {\r\n    //     current.textContent = `0${slideIndex}`;\r\n    // }else{\r\n    //     current.textContent = slideIndex;\r\n    // }\r\n\r\n    // }\r\n\r\n\r\n    // prev.addEventListener('click', ()=> {\r\n    //     plusSlide(-1);\r\n    // });function plusSlide(n){\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n\r\n\r\n    // next.addEventListener('click', ()=> {\r\n    //     plusSlide(1);\r\n    // });\r\n\r\n\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            // item.style.display = 'none'; //скрываем табы inline\r\n\r\n            item.classList.add('hide'); //добавили класс\r\n            item.classList.remove('show', 'fade'); //убрали ненужный\r\n\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n\r\n            item.classList.remove('tabheader__item_active'); //убираем класс активности у всех табовы\r\n\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { //передаем какой элемент хотим показать, i = 0 дефолт значение \r\n        // tabsContent[i].style.display = 'block'; //inline вариант смены стиля\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (e) => {\r\n\r\n        const target = e.target;\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            //при клике на список мы должны определять его номер и вызвать функцию шоу\r\n            tabs.forEach((item, i) => { //callback func мы перебираем все табы и их номера, если клик мышки по табу совпал с табом из фор ича, то мы вызываем\r\n                //две функции написаные ранее, а в шоу кладем номер таба для показа\r\n\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n\r\n    //Timer\r\n\r\n    const deadLine = '2021-01-10';\r\n\r\n    function getTimeRemaning(endtime) { //получаем время\r\n\r\n        const t = Date.parse(endtime) - Date.parse(new Date()), //парсим в Дату строку, получаем разницу в мс \r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)), // 1000мс умножаем на 60 получаем колво мс в минуте, потом еще получаем в часе, потом сколько в сутках мс, хвост дропаем\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)), //cперва получаем часы в мс, а потом процентом изымаем дни \r\n            minutes = Math.floor((t / (1000 * 60) % 60)), //количество минут в мс\r\n            seconds = Math.floor((t / (1000) % 60)); //количество секунд в мс\r\n\r\n        return { //ретюрнаем объект времени\r\n\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n\r\n    }\r\n\r\n    function getZero(num) { // добавляем 0 к числам меньше 10\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock(); //для уборки мигания в верстке\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaning(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n\r\n            hours.innerHTML = getZero(t.hours);\r\n\r\n            minutes.innerHTML = getZero(t.minutes);\r\n\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n\r\n                clearInterval(timeInterval);\r\n                days.innerHTML = \"X\";\r\n                hours.innerHTML = \"X\"; //по умолчанию при отрицательном\r\n                minutes.innerHTML = \"X\";\r\n                seconds.innerHTML = \"X\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setClock('.timer', deadLine);\r\n\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n    const tabs = require('./modules/tabs'),\r\n          modal = require ('./modules/modal'),\r\n          cards = require ('./modules/cards'),\r\n          calc = require ('./modules/calc'),\r\n          forms = require ('./modules/forms'),\r\n          slider = require ('./modules/slider'),\r\n          timer = require ('./modules/timer');\r\n          \r\n    tabs();\r\n    modal();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n    timer();\r\n\r\n});\r\n"],"sourceRoot":""}